<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tech Forever</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.whatslife.cn/"/>
  <updated>2018-03-17T11:36:33.857Z</updated>
  <id>http://blog.whatslife.cn/</id>
  
  <author>
    <name>Tech Forever</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为自己而活的时光</title>
    <link href="http://blog.whatslife.cn/posts/live-for-yourself/"/>
    <id>http://blog.whatslife.cn/posts/live-for-yourself/</id>
    <published>2018-03-17T11:22:04.000Z</published>
    <updated>2018-03-17T11:36:33.857Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://blogqn.qixincha.com/海边工作.jpg" alt=""></p><p>一个人的创业，</p><p>大抵是这样的，</p><a id="more"></a><p>面朝着蔚蓝的天空，</p><p>或向着碧蓝的大海，</p><p>怀揣着多年的梦想，</p><p>追随着内心的所向，</p><p>一间小屋，</p><p>一台电脑，</p><p>日出而作，</p><p>日落而息，</p><p>困了打个小盹，</p><p>饿了吃点东西，</p><p>累了做些运动，</p><p>好了继续工作，</p><p>化作一名有尊严的匠人，</p><p>获取与付出对等的收入，</p><p>对未来不再感到焦虑，</p><p>对规则不再觉得束缚，</p><p>不用再考虑他人是否满意，</p><p>无需再纠结抉择是否正确，</p><p>朝着心之所向，</p><p>想停就停，</p><p>想走便走，</p><p>天马行空，</p><p>任由畅想，</p><p>忽然会有那么一天，</p><p>内心感觉空空荡荡，</p><p>似乎比焦虑更难熬，</p><p>似乎比规则更烦躁，</p><p>因人不是野兽或者上帝，</p><p>人终究还是社会性动物，</p><p>于是找一些同事，</p><p>租下一间办公室，</p><p>找了一些投资，</p><p>有了一些股东，</p><p>他人的利益重新带来焦虑，</p><p>世俗的价值再次干扰抉择，</p><p>原来兜兜转转，</p><p>人和世界都没有变化，</p><p>唯一改变的，</p><p>是那段完全为自己而活的时光。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://blogqn.qixincha.com/海边工作.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;一个人的创业，&lt;/p&gt;
&lt;p&gt;大抵是这样的，&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://blog.whatslife.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活 现代诗" scheme="http://blog.whatslife.cn/tags/%E7%94%9F%E6%B4%BB-%E7%8E%B0%E4%BB%A3%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>django-xadmin</title>
    <link href="http://blog.whatslife.cn/posts/django-xadmin/"/>
    <id>http://blog.whatslife.cn/posts/django-xadmin/</id>
    <published>2016-08-05T08:13:41.000Z</published>
    <updated>2018-03-17T11:33:41.670Z</updated>
    
    <content type="html"><![CDATA[<p>Django xadmin是Django admin的替代品，功能更强大。能通过配置快速实现chart是我选择他的主要原因。另外还有第三方插件可以用于扩展。</p><a id="more"></a><h2 id="Chart"><a href="#Chart" class="headerlink" title="Chart"></a>Chart</h2><p>xadmin 默认使用Flot.js为chart组建， 该库为基于jquery的一个chart库， 调用起来比较方便， 但是文档质量较差，功能较弱，体验也不太理想。<br>比较方便的是该插件提供了一个强大的views方法， 能通过配置轻松的构建出AJAX数据API，且template上也将数据API与相应的chart元素作好绑定。<br>在Model OptionClass 中设定data_charts属性，该属性为dict类型，key是图表的标示名称，value是图表的具体设置属性，示例:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">RecordAdmin</span><span class="params">(object)</span>:</span></div><div class="line">    data_charts = &#123;</div><div class="line">        <span class="string">"user_count"</span>: &#123;<span class="string">'title'</span>: <span class="string">u"User Report"</span>, <span class="string">"x-field"</span>: <span class="string">"date"</span>, <span class="string">"y-field"</span>: (<span class="string">"user_count"</span>, <span class="string">"view_count"</span>), <span class="string">"order"</span>: (<span class="string">'date'</span>,)&#125;,</div><div class="line">        <span class="string">"avg_count"</span>: &#123;<span class="string">'title'</span>: <span class="string">u"Avg Report"</span>, <span class="string">"x-field"</span>: <span class="string">"date"</span>, <span class="string">"y-field"</span>: (<span class="string">'avg_count'</span>,), <span class="string">"order"</span>: (<span class="string">'date'</span>,)&#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><ul><li><p>图表的主要属性为:</p><ul><li>title : 图表的显示名称</li><li>x-field : 图表的 X 轴数据列, 一般是日期, 时间等</li><li>y-field : 图表的 Y 轴数据列, 该项是一个 list, 可以同时设定多个列, 这样多个列的数据会在同一个图表中显示</li><li>order : 排序信息, 如果不写则使用数据列表的排序</li><li>option: flot.js的其他参数， 会覆盖默认的参数, 官方文档未提及， 但是这个参数对于自定义chart非常重要</li></ul></li><li><p>API</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">class xadmin<span class="selector-class">.plugins</span><span class="selector-class">.chart</span><span class="selector-class">.ChartsPlugin</span>(admin_view)</div><div class="line"></div><div class="line">class xadmin<span class="selector-class">.plugins</span><span class="selector-class">.chart</span><span class="selector-class">.ChartsView</span>(request, *args, **kwargs)</div></pre></td></tr></table></figure></li></ul><h3 id="data-charts-的key"><a href="#data-charts-的key" class="headerlink" title="data_charts 的key"></a>data_charts 的key</h3><p>此key无实际作用，为了控制各chart的顺序， 最好使用collection.OrderedDict来初始化</p><h3 id="y-field"><a href="#y-field" class="headerlink" title="y-field"></a>y-field</h3><p>此参数可以是一个callable的方法， 可以是modaladmin中已定义好的一个函数名。</p><h3 id="order"><a href="#order" class="headerlink" title="order"></a>order</h3><p>只能是数据中的一个字段， 且是查询时排序， 不是很方便。</p><h3 id="直接上代码，-我们如何利用该插件实现员工调休统计图表："><a href="#直接上代码，-我们如何利用该插件实现员工调休统计图表：" class="headerlink" title="直接上代码， 我们如何利用该插件实现员工调休统计图表："></a>直接上代码， 我们如何利用该插件实现员工调休统计图表：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkDayOffAdmin</span><span class="params">(object)</span>:</span></div><div class="line">    data_charts = OrderedDict((</div><div class="line">        (</div><div class="line">            <span class="string">"all"</span>,</div><div class="line">            &#123;</div><div class="line">                <span class="string">'title'</span>: <span class="string">u"总览"</span>,</div><div class="line">                <span class="string">'x-field'</span>: <span class="string">'burnish_user__name'</span>,</div><div class="line">                <span class="string">'y-field'</span>: (</div><div class="line">                    <span class="string">'work_day_offs'</span>,</div><div class="line">                    <span class="string">'extra_works'</span>,</div><div class="line">                    <span class="string">'total_hours'</span>,</div><div class="line">                ),</div><div class="line">                <span class="string">'order'</span>: (<span class="string">'hours'</span>, ),</div><div class="line">                <span class="string">'option'</span>:&#123;</div><div class="line">                    <span class="string">'series'</span>: &#123;</div><div class="line">                        <span class="string">'bars'</span>: &#123;</div><div class="line">                            <span class="string">'show'</span>: <span class="keyword">True</span>,</div><div class="line">                            <span class="string">'barWidth'</span>: <span class="number">0.5</span>,</div><div class="line">                        &#125;</div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">'xaxis'</span>: &#123;</div><div class="line">                        <span class="string">'mode'</span>: <span class="string">"categories"</span>,</div><div class="line">                        <span class="string">'tickLength'</span>: <span class="number">0</span>,</div><div class="line">                    &#125;,</div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">        ),</div><div class="line">        (</div><div class="line">            <span class="string">"last"</span>,</div><div class="line">            &#123;</div><div class="line">                <span class="string">'title'</span>: <span class="string">u"剩余换休"</span>,</div><div class="line">                <span class="string">'x-field'</span>: <span class="string">'burnish_user__name'</span>,</div><div class="line">                <span class="string">'y-field'</span>: (</div><div class="line">                    <span class="string">'total_hours'</span>,</div><div class="line">                ),</div><div class="line">                <span class="string">'order'</span>: (<span class="string">'hours'</span>, ),</div><div class="line">                <span class="string">'option'</span>:&#123;</div><div class="line">                    <span class="string">'series'</span>: &#123;</div><div class="line">                        <span class="string">'bars'</span>: &#123;</div><div class="line">                            <span class="string">'show'</span>: <span class="keyword">True</span>,</div><div class="line">                            <span class="string">'barWidth'</span>: <span class="number">0.5</span>,</div><div class="line">                        &#125;</div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">'xaxis'</span>: &#123;</div><div class="line">                        <span class="string">'mode'</span>: <span class="string">"categories"</span>,</div><div class="line">                        <span class="string">'tickLength'</span>: <span class="number">0</span>,</div><div class="line">                    &#125;,</div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">        ),</div><div class="line">        (</div><div class="line">            <span class="string">"extra_works"</span>,</div><div class="line">            &#123;</div><div class="line">                <span class="string">'title'</span>: <span class="string">u"加班"</span>,</div><div class="line">                <span class="string">'x-field'</span>: <span class="string">'burnish_user__name'</span>,</div><div class="line">                <span class="string">'y-field'</span>: (</div><div class="line">                    <span class="string">'extra_works'</span>,</div><div class="line">                ),</div><div class="line">                <span class="string">'order'</span>: (<span class="string">'hours'</span>, ),</div><div class="line">                <span class="string">'option'</span>:&#123;</div><div class="line">                    <span class="string">'series'</span>: &#123;</div><div class="line">                        <span class="string">'bars'</span>: &#123;</div><div class="line">                            <span class="string">'show'</span>: <span class="keyword">True</span>,</div><div class="line">                            <span class="string">'barWidth'</span>: <span class="number">0.5</span>,</div><div class="line">                        &#125;</div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">'xaxis'</span>: &#123;</div><div class="line">                        <span class="string">'mode'</span>: <span class="string">"categories"</span>,</div><div class="line">                        <span class="string">'tickLength'</span>: <span class="number">0</span>,</div><div class="line">                    &#125;,</div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">        ),</div><div class="line">        (</div><div class="line">            <span class="string">"work_offs"</span>,</div><div class="line">            &#123;</div><div class="line">                <span class="string">'title'</span>: <span class="string">u"已换休"</span>,</div><div class="line">                <span class="string">'x-field'</span>: <span class="string">'burnish_user__name'</span>,</div><div class="line">                <span class="string">'y-field'</span>: (</div><div class="line">                    <span class="string">'work_day_offs'</span>,</div><div class="line">                ),</div><div class="line">                <span class="string">'order'</span>: (<span class="string">'hours'</span>, ),</div><div class="line">                <span class="string">'option'</span>:&#123;</div><div class="line">                    <span class="string">'series'</span>: &#123;</div><div class="line">                        <span class="string">'bars'</span>: &#123;</div><div class="line">                            <span class="string">'show'</span>: <span class="keyword">True</span>,</div><div class="line">                            <span class="string">'barWidth'</span>: <span class="number">0.5</span>,</div><div class="line">                        &#125;</div><div class="line">                    &#125;,</div><div class="line">                    <span class="string">'xaxis'</span>: &#123;</div><div class="line">                        <span class="string">'mode'</span>: <span class="string">"categories"</span>,</div><div class="line">                        <span class="string">'tickLength'</span>: <span class="number">0</span>,</div><div class="line">                    &#125;,</div><div class="line">                &#125;,</div><div class="line">            &#125;,</div><div class="line">        ),</div><div class="line">    ))</div><div class="line">    list_display = (</div><div class="line">        <span class="string">'burnish_user'</span>,</div><div class="line">        <span class="string">'from_date'</span>,</div><div class="line">        <span class="string">'end_date'</span>,</div><div class="line">        <span class="string">'hours'</span>,</div><div class="line">        <span class="string">'status'</span>,</div><div class="line">        <span class="string">'reason'</span>,</div><div class="line">    )</div><div class="line">    list_filter = (</div><div class="line">        <span class="string">'burnish_user'</span>,</div><div class="line">        <span class="string">'status'</span>,</div><div class="line">    )</div><div class="line">    search_fields = (</div><div class="line">        <span class="string">'burnish_user__name'</span>,</div><div class="line">        <span class="string">'reason'</span>,</div><div class="line">    )</div><div class="line">    list_editable = (</div><div class="line">        <span class="string">'from_date'</span>,</div><div class="line">        <span class="string">'end_date'</span>,</div><div class="line">        <span class="string">'hours'</span>,</div><div class="line">        <span class="string">'status'</span>,</div><div class="line">    )</div><div class="line">    date_hierarchy = <span class="string">'from_date'</span></div><div class="line">    total_hours_dealed = <span class="keyword">None</span></div><div class="line">    extra_works_dealed = <span class="keyword">None</span></div><div class="line">    work_day_offs_dealed = <span class="keyword">None</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">total_hours</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.total_hours_dealed:</div><div class="line">            self.total_hours_dealed = []</div><div class="line">        user_id = data.burnish_user.id</div><div class="line">        <span class="keyword">if</span> user_id  <span class="keyword">in</span> self.total_hours_dealed:</div><div class="line">            <span class="keyword">return</span>  <span class="keyword">None</span></div><div class="line">        self.total_hours_dealed.append(user_id)</div><div class="line">        <span class="keyword">return</span> WorkDayOff.objects.filter(</div><div class="line">            burnish_user_id=user_id,</div><div class="line">            status=<span class="string">'sure'</span>,</div><div class="line">        ).aggregate(</div><div class="line">            total_hours=Sum(<span class="string">'hours'</span>)</div><div class="line">        )[<span class="string">'total_hours'</span>] <span class="keyword">or</span> <span class="number">0</span></div><div class="line">    total_hours.short_description = <span class="string">'剩余换休'</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extra_works</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.extra_works_dealed:</div><div class="line">            self.extra_works_dealed= []</div><div class="line">        user_id = data.burnish_user.id</div><div class="line">        <span class="keyword">if</span> user_id  <span class="keyword">in</span> self.extra_works_dealed:</div><div class="line">            <span class="keyword">return</span>  <span class="keyword">None</span></div><div class="line">        self.extra_works_dealed.append(user_id)</div><div class="line">        <span class="keyword">return</span> WorkDayOff.objects.filter(</div><div class="line">            burnish_user_id=user_id,</div><div class="line">            status=<span class="string">'sure'</span>,</div><div class="line">            hours__gt=<span class="number">0</span>,</div><div class="line">        ).aggregate(</div><div class="line">            total_hours=Sum(<span class="string">'hours'</span>)</div><div class="line">        )[<span class="string">'total_hours'</span>] <span class="keyword">or</span> <span class="number">0</span></div><div class="line">    extra_works.short_description = <span class="string">'总计加班'</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work_day_offs</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.work_day_offs_dealed:</div><div class="line">            self.work_day_offs_dealed= []</div><div class="line">        user_id = data.burnish_user.id</div><div class="line">        <span class="keyword">if</span> user_id  <span class="keyword">in</span> self.work_day_offs_dealed:</div><div class="line">            <span class="keyword">return</span>  <span class="keyword">None</span></div><div class="line">        self.work_day_offs_dealed.append(user_id)</div><div class="line">        <span class="keyword">return</span> abs(WorkDayOff.objects.filter(</div><div class="line">            burnish_user_id=user_id,</div><div class="line">            status=<span class="string">'sure'</span>,</div><div class="line">            hours__lt=<span class="number">0</span>,</div><div class="line">        ).aggregate(</div><div class="line">            total_hours=Sum(<span class="string">'hours'</span>)</div><div class="line">        )[<span class="string">'total_hours'</span>] <span class="keyword">or</span> <span class="number">0</span>)</div><div class="line">    work_day_offs.short_description = <span class="string">'总计休假'</span></div></pre></td></tr></table></figure><p><img src="http://obdp0ndxs.bkt.clouddn.com/admin_charts.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Django xadmin是Django admin的替代品，功能更强大。能通过配置快速实现chart是我选择他的主要原因。另外还有第三方插件可以用于扩展。&lt;/p&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.whatslife.cn/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>最好用的Django富文本编辑器</title>
    <link href="http://blog.whatslife.cn/posts/use-django-wysiwyg-as-django-rich-text-editor/"/>
    <id>http://blog.whatslife.cn/posts/use-django-wysiwyg-as-django-rich-text-editor/</id>
    <published>2016-08-04T06:57:52.000Z</published>
    <updated>2017-06-13T03:37:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>Django不自带富文本编辑器，但是富文本编辑器是做CRM系统不可缺的工具。我们前后尝试过多个富文本编辑器， 包括但不限于<code>Ueditor</code>, <code>Django-Summernote</code>等。<br>最后找到一个最合适的方案： <a target="_blank" href="https://github.com/django-ckeditor/django-ckeditor">django-ckeditor</a><br><img src="http://obdp0ndxs.bkt.clouddn.com/ckeditor.png" alt=""></p><a id="more"></a><h2 id="Django-WYSIWYG"><a href="#Django-WYSIWYG" class="headerlink" title="Django WYSIWYG"></a>Django WYSIWYG</h2><p>我们在接入CKEDITOR时用到另一个工具：<a target="_blank" href="https://github.com/pydanny-archive/django-wysiwyg">django-wysiwyg</a><br>此物作用是将Django的各种WYSIWYG编辑器进行统一封装，做成一个接口统一的接口。其只提供接口，具体要用的各个编辑器本身， 还是需要分别安装的。<br>此工具主要提供几个<code>tag</code>和一个<code>change_form.html</code>页面。 </p><ul><li>当在我们自己写的APP中使用时, 只需按照其文档，调用<code>tag</code>即可将<code>textarea</code>标签转换为<code>settings</code>中配置好的富文本编辑器，无需修改任何<code>py</code>代码。</li><li>而<code>change_form.html</code>是用于替换<code>Django Admin</code>中的<code>change form template</code>的。<br>原理是继承于原<code>admin</code>的<code>change_form.html</code>并添加了WYSIWYG相关代码。</li></ul><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol><li><p>安装相关库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install django-wysiwyg</div><div class="line">pip install django-ckeditor</div></pre></td></tr></table></figure></li><li><p>在INSTALLED_APPS中添加相应的库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">INSTALLED_APPS = [</div><div class="line"></div><div class="line">    ……</div><div class="line"></div><div class="line">    <span class="string">'ckeditor'</span>,</div><div class="line">    <span class="string">'ckeditor_uploader'</span>,</div><div class="line">    <span class="string">'django_wysiwyg'</span>,</div><div class="line"></div><div class="line">    ……</div><div class="line"></div><div class="line">]</div></pre></td></tr></table></figure></li><li><p>确保项目的STATIC_ROOT, STATIC_URL, MEDIA_ROOT, MEDIA_URL等正确配置</p></li><li><p>settings中添加相应配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">DJANGO_WYSIWYG_FLAVOR = <span class="string">"ckeditor"</span>  <span class="comment"># 使用哪个符文本编辑器</span></div><div class="line">CKEDITOR_UPLOAD_PATH = <span class="string">"ck_uploads/"</span>  <span class="comment"># 文件上传路径</span></div><div class="line">CKEDITOR_UPLOAD_SLUGIFY_FILENAME = <span class="keyword">True</span></div><div class="line">CKEDITOR_IMAGE_BACKEND = <span class="string">'pillow'</span>  <span class="comment"># 使用pillow处理图片</span></div><div class="line">CKEDITOR_ALLOW_NONIMAGE_FILES = <span class="keyword">False</span>  <span class="comment"># 只允许上传图片</span></div><div class="line">CKEDITOR_JQUERY_URL = <span class="string">"%s/jslib/jquery-1.11.0.min.js"</span> % STATIC_URL  <span class="comment"># 指定jquery文件路径,否则会使用google cdn.</span></div><div class="line">DJANGO_WYSIWYG_MEDIA_URL = <span class="string">"%s/ckeditor/"</span> % STATIC_URL  <span class="comment"># 指定ckeditor 的js和css所在路径</span></div></pre></td></tr></table></figure></li><li><p>urls中添加相关uploader url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">url(<span class="string">r'^ckeditor/'</span>, include(<span class="string">'ckeditor_uploader.urls'</span>)),</div></pre></td></tr></table></figure></li><li><p>CKEDITOR推荐配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">'skin'</span>: <span class="string">'moono'</span>,</div><div class="line">    <span class="comment"># 'skin': 'office2013',</span></div><div class="line">    <span class="string">'toolbar_Basic'</span>: [</div><div class="line">        [<span class="string">'Source'</span>, <span class="string">'-'</span>, <span class="string">'Bold'</span>, <span class="string">'Italic'</span>]</div><div class="line">    ],</div><div class="line">    <span class="string">'toolbar_YouCustomToolbarConfig'</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="string">'name'</span>: <span class="string">'basicstyles'</span>,</div><div class="line">            <span class="string">'items'</span>: [</div><div class="line">                <span class="string">'Bold'</span>, <span class="string">'Italic'</span>, <span class="string">'Underline'</span>, <span class="string">'Strike'</span>,</div><div class="line">                <span class="string">'Subscript'</span>, <span class="string">'Superscript'</span>, <span class="string">'-'</span>, <span class="string">'RemoveFormat'</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">'name'</span>: <span class="string">'paragraph'</span>,</div><div class="line">            <span class="string">'items'</span>: [</div><div class="line">                <span class="string">'NumberedList'</span>, <span class="string">'BulletedList'</span>, <span class="string">'-'</span>, <span class="string">'Outdent'</span>, <span class="string">'Indent'</span>,</div><div class="line">                <span class="string">'-'</span>, <span class="string">'Blockquote'</span>, <span class="string">'CreateDiv'</span>, <span class="string">'-'</span>, <span class="string">'JustifyLeft'</span>,</div><div class="line">                <span class="string">'JustifyCenter'</span>, <span class="string">'JustifyRight'</span>, <span class="string">'JustifyBlock'</span>,</div><div class="line">                <span class="string">'-'</span>, <span class="string">'BidiLtr'</span>, <span class="string">'BidiRtl'</span>, <span class="string">'Language'</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &#123;<span class="string">'name'</span>: <span class="string">'links'</span>, <span class="string">'items'</span>: [<span class="string">'Link'</span>, <span class="string">'Unlink'</span>, <span class="string">'Anchor'</span>]&#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">'name'</span>: <span class="string">'insert'</span>,</div><div class="line">            <span class="string">'items'</span>: [</div><div class="line">                <span class="string">'Image'</span>, <span class="string">'Flash'</span>, <span class="string">'Table'</span>, <span class="string">'HorizontalRule'</span>,</div><div class="line">                <span class="string">'Smiley'</span>, <span class="string">'SpecialChar'</span>, <span class="string">'PageBreak'</span>, <span class="string">'Iframe'</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        <span class="string">'/'</span>,</div><div class="line">        &#123;</div><div class="line">            <span class="string">'name'</span>: <span class="string">'clipboard'</span>,</div><div class="line">            <span class="string">'items'</span>: [</div><div class="line">                <span class="string">'Cut'</span>, <span class="string">'Copy'</span>, <span class="string">'Paste'</span>, <span class="string">'PasteText'</span>,</div><div class="line">                <span class="string">'PasteFromWord'</span>, <span class="string">'-'</span>, <span class="string">'Undo'</span>, <span class="string">'Redo'</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &#123;<span class="string">'name'</span>: <span class="string">'editing'</span>, <span class="string">'items'</span>: [</div><div class="line">            <span class="string">'Find'</span>, <span class="string">'Replace'</span>, <span class="string">'-'</span>, <span class="string">'SelectAll'</span>]&#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">'name'</span>: <span class="string">'forms'</span>,</div><div class="line">            <span class="string">'items'</span>: [</div><div class="line">                <span class="string">'Form'</span>, <span class="string">'Checkbox'</span>, <span class="string">'Radio'</span>, <span class="string">'TextField'</span>, <span class="string">'Textarea'</span>,</div><div class="line">                <span class="string">'Select'</span>, <span class="string">'Button'</span>, <span class="string">'ImageButton'</span>, <span class="string">'HiddenField'</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">'name'</span>: <span class="string">'styles'</span>,</div><div class="line">            <span class="string">'items'</span>: [</div><div class="line">                <span class="string">'Styles'</span>, <span class="string">'Format'</span>, <span class="string">'Font'</span>, <span class="string">'FontSize'</span></div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &#123;<span class="string">'name'</span>: <span class="string">'colors'</span>, <span class="string">'items'</span>: [<span class="string">'TextColor'</span>, <span class="string">'BGColor'</span>]&#125;,</div><div class="line">        &#123;</div><div class="line">            <span class="string">'name'</span>: <span class="string">'tools'</span>,</div><div class="line">            <span class="string">'items'</span>: [</div><div class="line">                <span class="string">'Maximize'</span>,</div><div class="line">                <span class="string">'ShowBlocks'</span>,</div><div class="line">                <span class="string">'Preview'</span>,</div><div class="line">                <span class="string">'Source'</span>,</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">    ],</div><div class="line">    <span class="comment"># put selected toolbar config here</span></div><div class="line">    <span class="string">'toolbar'</span>: <span class="string">'YouCustomToolbarConfig'</span>,</div><div class="line">    <span class="comment"># 'toolbarGroups': [&#123; 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] &#125;],</span></div><div class="line">    <span class="comment"># 'height': 291,</span></div><div class="line">    <span class="comment"># 'width': '100%',</span></div><div class="line">    <span class="comment"># 'filebrowserWindowHeight': 725,</span></div><div class="line">    <span class="comment"># 'filebrowserWindowWidth': 940,</span></div><div class="line">    <span class="comment"># 'toolbarCanCollapse': True,</span></div><div class="line">    <span class="comment"># 'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',</span></div><div class="line">    <span class="string">'tabSpaces'</span>: <span class="number">4</span>,</div><div class="line">    <span class="string">'filebrowserImageUploadUrl'</span>: <span class="string">'/ckeditor/upload/'</span>,</div><div class="line">    <span class="string">'extraPlugins'</span>: <span class="string">','</span>.join(</div><div class="line">        [</div><div class="line">            <span class="comment"># you extra plugins here</span></div><div class="line">            <span class="string">'div'</span>,</div><div class="line">            <span class="string">'autolink'</span>,</div><div class="line">            <span class="string">'autoembed'</span>,</div><div class="line">            <span class="string">'embedsemantic'</span>,</div><div class="line">            <span class="string">'autogrow'</span>,</div><div class="line">            <span class="string">'image2'</span>,</div><div class="line">            <span class="comment"># 'devtools',</span></div><div class="line">            <span class="string">'widget'</span>,</div><div class="line">            <span class="string">'lineutils'</span>,</div><div class="line">            <span class="string">'clipboard'</span>,</div><div class="line">            <span class="string">'dialog'</span>,</div><div class="line">            <span class="string">'dialogui'</span>,</div><div class="line">            <span class="string">'elementspath'</span></div><div class="line">        ]),</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>在需要使用富文本编辑器的地方调用WYSIWYG 提供的tag:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% load wysiwyg %&#125;  <span class="comment"># 加载tag</span></div><div class="line">&#123;% wysiwyg_setup %&#125;  <span class="comment"># 引入富文本编辑器的js, css等</span></div><div class="line">&#123;% wysiwyg_editor <span class="string">"id_detail"</span> <span class="string">"id_detail_editor"</span> CKEDITOR_CONFIGS|safe  %&#125;  <span class="comment"># 在需要使用富文本编辑器的元素后调用, 注意配置必须用safe filter传入， 否则会转义, js会报错</span></div></pre></td></tr></table></figure></li></ol><h2 id="关于图片上传"><a href="#关于图片上传" class="headerlink" title="关于图片上传"></a>关于图片上传</h2><ol><li>务必安装并正确配置ckeditor_uploader</li><li>在CKEDITOR的配置中， 必须配置<code>filebrowserImageUploadUrl</code></li><li>推荐使用image2插件来替换原来的image插件， 更简洁好用</li><li>CKEDITOR是可以支持图片拖拽和复制的， 会自动上传。详见<code>uploadimage</code>插件。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Django不自带富文本编辑器，但是富文本编辑器是做CRM系统不可缺的工具。我们前后尝试过多个富文本编辑器， 包括但不限于&lt;code&gt;Ueditor&lt;/code&gt;, &lt;code&gt;Django-Summernote&lt;/code&gt;等。&lt;br&gt;最后找到一个最合适的方案： &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/django-ckeditor/django-ckeditor&quot;&gt;django-ckeditor&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://obdp0ndxs.bkt.clouddn.com/ckeditor.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.whatslife.cn/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>RethinkDB 实时数据库</title>
    <link href="http://blog.whatslife.cn/posts/RethinkDB-database-for-the-realtime/"/>
    <id>http://blog.whatslife.cn/posts/RethinkDB-database-for-the-realtime/</id>
    <published>2016-08-01T05:46:35.000Z</published>
    <updated>2017-06-13T03:37:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>RethinkDB 是一个为构建实时应用程序而生的开源数据库，它可以实时地向你的应用程序推送数据</p><p><img src="http://img.l.jifangcheng.com/rethinkdb-1.png" alt=""></p><a id="more"></a><h2 id="什么是-RethinkDB"><a href="#什么是-RethinkDB" class="headerlink" title="什么是 RethinkDB"></a>什么是 RethinkDB</h2><ul><li>一个为构建实时应用程序而生的开源数据库</li><li>NoSQL 非关系型数据库，它存储 JSON 数据</li><li>易拓展的分布式数据库</li><li>拥有自动故障转移和强大容错能力的高性能数据库</li></ul><h2 id="RethinkDB-X-Python-快速开始"><a href="#RethinkDB-X-Python-快速开始" class="headerlink" title="RethinkDB X Python 快速开始"></a>RethinkDB X Python 快速开始</h2><h3 id="安装-RethinkDB"><a href="#安装-RethinkDB" class="headerlink" title="安装 RethinkDB"></a>安装 RethinkDB</h3><p>macOS 可以使用 <code>brew install rethinkdb</code> 来快速安装 RethinkDB，其它的系统可以看官网的文档 <a href="https://rethinkdb.com/docs/install/" target="_blank" rel="external">https://rethinkdb.com/docs/install/</a></p><h3 id="安装-Python-连接-RethinkDB-的库"><a href="#安装-Python-连接-RethinkDB-的库" class="headerlink" title="安装 Python 连接 RethinkDB 的库"></a>安装 Python 连接 RethinkDB 的库</h3><p>使用 pip 就可以了 <code>pip install rethinkdb</code></p><h3 id="使用-RethinkDB"><a href="#使用-RethinkDB" class="headerlink" title="使用 RethinkDB"></a>使用 RethinkDB</h3><ul><li>首先启动 RethinkDB</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>rethinkdb</div></pre></td></tr></table></figure><ul><li>在 python 里面引入 RethinkDB 的库就可以操作它了</li></ul><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ python</div><div class="line"></div><div class="line">&gt;&gt;&gt; <span class="keyword">import</span> rethinkdb <span class="keyword">as</span> r</div></pre></td></tr></table></figure><ul><li>连接数据库</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">r<span class="selector-class">.connect</span>(<span class="string">"localhost"</span>, <span class="number">28015</span>)<span class="selector-class">.repl</span>()</div></pre></td></tr></table></figure><p><em>注意：<code>repl</code> 方法仅适合在 shell 里面调试使用，它会给你当前的 shell 环境设置一个默认的连接，使得你不用每次都给 <code>run</code> 方法传一个 <code>connection</code> 对象进去。但是，在生产环境中你不能使用这种方法，你执行的每个查询命令都必须要给 <code>run</code> 方法传一个 <code>connection</code> 对象进去，你可以看一下这个<a href="https://github.com/rethinkdb/rethinkdb-example-flask-backbone-todo/blob/master/todo.py" target="_blank" rel="external">简单的示例</a></em></p><ul><li>创建一张表</li></ul><p>在 <code>test</code> 数据库里创建一张 <code>authors</code> 表</p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">r<span class="selector-class">.db</span>(<span class="string">"test"</span>)<span class="selector-class">.table_create</span>(<span class="string">"authors"</span>)<span class="selector-class">.run</span>()</div></pre></td></tr></table></figure><p>你应该会得到和下面类似的结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"config_changes"</span>: [</div><div class="line">        &lt;table configuration data&gt;</div><div class="line">    ],</div><div class="line">    <span class="attr">"tables_created"</span>: <span class="number">1</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p><em>RethinkDB 默认创建了一个名为 <code>test</code> 的数据库，你可以使用 <code>r.db_create(db_name)</code> 来创建一个数据库</em></p><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><p>使用 <code>insert()</code> 方法来插入数据，插入的数据都是 JSON 格式的</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">r.table(<span class="string">"authors"</span>).<span class="keyword">insert</span>([</div><div class="line">    &#123; <span class="string">"name"</span>: <span class="string">"William Adama"</span>, <span class="string">"tv_show"</span>: <span class="string">"Battlestar Galactica"</span>,</div><div class="line">      <span class="string">"posts"</span>: [</div><div class="line">        &#123;<span class="string">"title"</span>: <span class="string">"Decommissioning speech"</span>, <span class="string">"content"</span>: <span class="string">"The Cylon War is long over..."</span>&#125;,</div><div class="line">        &#123;<span class="string">"title"</span>: <span class="string">"We are at war"</span>, <span class="string">"content"</span>: <span class="string">"Moments ago, this ship received..."</span>&#125;</div><div class="line">      ]</div><div class="line">    &#125;,</div><div class="line">    &#123; <span class="string">"name"</span>: <span class="string">"Laura Roslin"</span>, <span class="string">"tv_show"</span>: <span class="string">"Battlestar Galactica"</span>,</div><div class="line">      <span class="string">"posts"</span>: [</div><div class="line">        &#123;<span class="string">"title"</span>: <span class="string">"The oath of office"</span>, <span class="string">"content"</span>: <span class="string">"I, Laura Roslin, ..."</span>&#125;,</div><div class="line">        &#123;<span class="string">"title"</span>: <span class="string">"They look like us"</span>, <span class="string">"content"</span>: <span class="string">"The Cylons have the ability..."</span>&#125;</div><div class="line">      ]</div><div class="line">    &#125;</div><div class="line">]).run()</div></pre></td></tr></table></figure><p><em>注意：因为我们上面连接时使用了 <code>repl</code> 方法，所以这里的 <code>run</code> 不用传一个 <code>connection</code> 对象进去。但是生产环境里面不能使用这种方法，下面是生产环境应该使用的方法的一个示例</em></p><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">rdb_conn</span> = r.connect(<span class="attr">host=RDB_HOST,</span> <span class="attr">port=RDB_PORT,</span> <span class="attr">db=DB)</span></div><div class="line"></div><div class="line">r.table(<span class="string">"authors"</span>).insert(……).run(rdb_conn)</div></pre></td></tr></table></figure><h4 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h4><ul><li>查询所有数据</li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cursor = r.table(<span class="string">"authors"</span>).run()</div><div class="line"><span class="keyword">for</span> <span class="built_in">document</span> <span class="keyword">in</span> cursor:</div><div class="line">    <span class="built_in">print</span>(<span class="built_in">document</span>)</div></pre></td></tr></table></figure><p>这个操作会返回 <code>authors</code> 表里面的所有数据，每条数据都会附带它的 <code>id</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="string">u'name'</span>: <span class="string">u'hello'</span>, <span class="string">u'id'</span>: <span class="string">u'6ca50999-75eb-4af4-b9b0-bbac478dc884'</span>&#125;</div></pre></td></tr></table></figure><ul><li>条件查询</li></ul><p>下面的操作会返回 <code>name</code> 是 <code>William Adama</code> 的数据</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cursor = r.table(<span class="string">"authors"</span>).filter(r.row[<span class="string">"name"</span>] == <span class="string">"William Adama"</span>).run()</div><div class="line"><span class="keyword">for</span> <span class="built_in">document</span> <span class="keyword">in</span> cursor:</div><div class="line">    <span class="built_in">print</span>(<span class="built_in">document</span>)</div></pre></td></tr></table></figure><p>下面的操作会返回数据里面 <code>posts</code> 大于 2 条记录的数据</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cursor = r.<span class="keyword">table</span>(<span class="string">"authors"</span>).filter(r.row[<span class="string">"posts"</span>].<span class="keyword">count</span>() &gt; 2).<span class="keyword">run</span>()</div><div class="line"><span class="keyword">for</span> document <span class="keyword">in</span> cursor:</div><div class="line">    <span class="keyword">print</span>(document)</div></pre></td></tr></table></figure><ul><li>查询单条记录</li></ul><p>查询 <code>id</code> 为 <code>7644aaf2-9928-4231-aa68-4e65e31bf219</code> 的数据</p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">r<span class="selector-class">.db</span>(<span class="string">'test'</span>)<span class="selector-class">.table</span>(<span class="string">'authors'</span>)<span class="selector-class">.get</span>(<span class="string">'7644aaf2-9928-4231-aa68-4e65e31bf219'</span>)<span class="selector-class">.run</span>()</div></pre></td></tr></table></figure><h4 id="实时数据"><a href="#实时数据" class="headerlink" title="实时数据"></a>实时数据</h4><p>使用 <code>changes()</code> 方法来监听数据的变化</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cursor = r.table(<span class="string">"authors"</span>).changes().run()</div><div class="line"><span class="keyword">for</span> <span class="built_in">document</span> <span class="keyword">in</span> cursor:</div><div class="line">    <span class="built_in">print</span>(<span class="built_in">document</span>)</div></pre></td></tr></table></figure><h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><p>使用 <code>update()</code> 方法来删除数据</p><p>更新所有数据</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">r.<span class="keyword">table</span>(<span class="string">"authors"</span>).<span class="keyword">update</span>(&#123;<span class="string">"type"</span>: <span class="string">"fictional"</span>&#125;).<span class="keyword">run</span>()</div></pre></td></tr></table></figure><p>结合 <code>filter</code> 更新指定数据</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">r.table(<span class="string">"authors"</span>).</div><div class="line">    filter(r.row[<span class="string">'name'</span>] == <span class="string">"William Adama"</span>).</div><div class="line">    update(&#123;<span class="string">"rank"</span>: <span class="string">"Admiral"</span>&#125;).run()</div></pre></td></tr></table></figure><p>更新数组的数据</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">r.table(<span class="string">'authors'</span>).filter(r.row[<span class="string">"name"</span>] == <span class="string">"Jean-Luc Picard"</span>).</div><div class="line">    update(&#123;<span class="string">"posts"</span>: r.row[<span class="string">"posts"</span>].append(&#123;</div><div class="line">        <span class="string">"title"</span>: <span class="string">"Shakespeare"</span>,</div><div class="line">        <span class="string">"content"</span>: <span class="string">"What a piece of work is man..."</span>&#125;)</div><div class="line">    &#125;).run()</div></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><p>使用 <code>delete()</code> 方法来删除数据</p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">r<span class="selector-class">.table</span>(<span class="string">"authors"</span>).</div><div class="line">    <span class="selector-tag">filter</span>( r.row[<span class="string">"posts"</span>].count() &lt; <span class="number">3</span> ).</div><div class="line">    <span class="selector-tag">delete</span>()<span class="selector-class">.run</span>()</div></pre></td></tr></table></figure><h2 id="RethinkDB-驱动"><a href="#RethinkDB-驱动" class="headerlink" title="RethinkDB 驱动"></a>RethinkDB 驱动</h2><p>RethinkDB 官方提供了对 JavaScript, Python, Ruby, Java 四种语言的支持，还有很多社区贡献的第三方的对其它语言的支持，你可以在下面的这个网址里面找到<br><a href="https://rethinkdb.com/docs/install-drivers/" target="_blank" rel="external">https://rethinkdb.com/docs/install-drivers/</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://rethinkdb.com" target="_blank" rel="external">RethinkDB: the open-source database for the realtime web</a></li><li><a href="https://rethinkdb.com/docs/" target="_blank" rel="external">RethinkDB Documentation</a></li><li><a href="https://github.com/rethinkdb/rethinkdb" target="_blank" rel="external">https://github.com/rethinkdb/rethinkdb</a></li></ul><p><img src="http://img.l.jifangcheng.com/rethinkdb-2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RethinkDB 是一个为构建实时应用程序而生的开源数据库，它可以实时地向你的应用程序推送数据&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.l.jifangcheng.com/rethinkdb-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>极致简洁 Markdown</title>
    <link href="http://blog.whatslife.cn/posts/Extreme-simplicity-Markdown/"/>
    <id>http://blog.whatslife.cn/posts/Extreme-simplicity-Markdown/</id>
    <published>2016-07-28T09:23:37.000Z</published>
    <updated>2017-06-13T03:37:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML/HTML 文档</p><a id="more"></a><h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p><img src="http://img.l.jifangcheng.com/markdown-1.png" alt="Markdown"></p><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>Markdown 的目标是实现「易读易写」。</p><p>Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像强调。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h3 id="Markdown-和-HTML"><a href="#Markdown-和-HTML" class="headerlink" title="Markdown 和 HTML"></a>Markdown 和 HTML</h3><ul><li>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。</li><li>Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</li><li>Markdown 的构想不是要使得 HTML 文档更容易书写，它的理念是，能让文档更容易读、写和改。</li><li>HTML 是一种发布的格式，Markdown 是一种书写的格式。</li></ul><h2 id="为什么使用-Markdown"><a href="#为什么使用-Markdown" class="headerlink" title="为什么使用 Markdown"></a>为什么使用 Markdown</h2><ul><li>纯文本，所以兼容性极强，可以用所有文本编辑器打开</li><li>专注写作，而不是关注排版</li><li>格式转换方便，Markdown 的文本可以轻松转换为 html、PDF等</li><li>Markdown 的标记语法有极好的可读性</li></ul><h2 id="Markdown-语法简介"><a href="#Markdown-语法简介" class="headerlink" title="Markdown 语法简介"></a>Markdown 语法简介</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题 #"></a>标题 <code>#</code></h3><p>以 <code>#</code> 开始，一个 <code>#</code> 对应一级标题，最多可以有 6 级标题</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#       一级标题 H1</span></div><div class="line"><span class="meta">##      二级标题 H2</span></div><div class="line"><span class="meta">###     三级标题 H3</span></div><div class="line"><span class="meta">####    四级标题 H4</span></div><div class="line"><span class="meta">#####   五级标题 H5</span></div><div class="line"><span class="meta">######  六级标题 H6</span></div></pre></td></tr></table></figure><h3 id="强调"><a href="#强调" class="headerlink" title="强调 *"></a>强调 <code>*</code></h3><p>用 <code>*</code> 包裹文字表示强调，一字 <code>*</code> 包裹的表示斜体，两个表示粗体</p><p><img src="http://img.l.jifangcheng.com/markdown-6.png" alt="Markdown"></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表 *"></a>列表 <code>*</code></h3><p>单个 <code>*</code> 表示这是一个无序列表，用数字表示这是一个有序列表</p><p><img src="http://img.l.jifangcheng.com/markdown-5.png" alt="Markdown"></p><h3 id="引用-gt"><a href="#引用-gt" class="headerlink" title="引用 &gt;"></a>引用 <code>&gt;</code></h3><p>使用 <code>&gt;</code> 表示这段文字是一个引用</p><p><img src="http://img.l.jifangcheng.com/markdown-7.png" alt="Markdown"></p><h3 id="链接和图片"><a href="#链接和图片" class="headerlink" title="链接和图片"></a>链接和图片</h3><p>链接的格式：<code>[链接内容](链接地址)</code><br>图片的格式和链接类似，只不过在前端加一个 <code>!</code>：<code>![图片描述](图片地址)</code></p><p><img src="http://img.l.jifangcheng.com/markdown-8.png" alt="Markdown"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>使用 ` ` 表示行内代码，``` 表示多行代码</p><p><img src="http://img.l.jifangcheng.com/markdown-9.png" alt="Markdown"></p><h2 id="GitHub-Flavored-Markdown"><a href="#GitHub-Flavored-Markdown" class="headerlink" title=" GitHub Flavored Markdown"></a><i class="fa fa-github" aria-hidden="true"></i> GitHub Flavored Markdown</h2><p>GitHub Flavored Markdown 是 GitHub 使用的 Markdown 格式，对 Markdown 增加了一些新功能</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>``` 后面加上编程语言可以让代码按照你指定的语言进行高亮</p><pre><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fancyAlert</span>(<span class="params">arg</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span>(arg) &#123;</div><div class="line">    $.facebox(&#123;div:<span class="string">'#foo'</span>&#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></pre><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><p>下面的的这种格式会被渲染成一个任务列表</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">- </span>[<span class="string">x</span>] @mentions, #refs, [<span class="string">links</span>](<span class="link"></span>), <span class="strong">**formatting**</span>, and <span class="xml"><span class="tag">&lt;<span class="name">del</span>&gt;</span></span>tags<span class="xml"><span class="tag">&lt;/<span class="name">del</span>&gt;</span></span> supported</div><div class="line"><span class="bullet">- </span>[x] list syntax required (any unordered or ordered list supported)</div><div class="line"><span class="bullet">- </span>[x] this is a complete item</div><div class="line"><span class="bullet">- </span>[ ] this is an incomplete item</div></pre></td></tr></table></figure><p><img src="http://img.l.jifangcheng.com/markdown-3.png" alt="Markdown"></p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>下面的这种格式会被渲染成一个表格</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">First Header | Second Header</div><div class="line"><span class="comment">------------ | -------------</span></div><div class="line">Content <span class="built_in">from</span> cell <span class="number">1</span> | Content <span class="built_in">from</span> cell <span class="number">2</span></div><div class="line">Content <span class="keyword">in</span> <span class="keyword">the</span> <span class="keyword">first</span> column | Content <span class="keyword">in</span> <span class="keyword">the</span> <span class="keyword">second</span> column</div></pre></td></tr></table></figure><p><img src="http://img.l.jifangcheng.com/markdown-4.png" alt="Markdown"></p><h3 id="引用-SHA-值"><a href="#引用-SHA-值" class="headerlink" title="引用 SHA 值"></a>引用 SHA 值</h3><p>对任何 commit 的 SHA 值的引用都会自动转换成这个 commit 的链接</p><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">16c999e8c71134401a78d4d46435517b2271d6ac</div><div class="line">mojombo<span class="variable">@16c999e8c71134401a78d4d46435517b2271d6ac</span></div><div class="line">mojombo/github-flavored-markdown<span class="variable">@16c999e8c71134401a78d4d46435517b2271d6ac</span></div></pre></td></tr></table></figure><h3 id="引用-Issue"><a href="#引用-Issue" class="headerlink" title="引用 Issue"></a>引用 Issue</h3><p>你可以直接引用一个 Issue 或者 Pull Request 的编号，它们会被自动的转换成链接</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#1</span></div><div class="line">mojombo<span class="comment">#1</span></div><div class="line">mojombo/github-flavored-markdown<span class="comment">#1</span></div></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title="@"></a>@</h3><p>使用 <code>@</code> 符号来提醒一个人查看这个消息</p><h3 id="URL-地址自动链接"><a href="#URL-地址自动链接" class="headerlink" title="URL 地址自动链接"></a>URL 地址自动链接</h3><p>任何的链接（比如 <code>http://www.github.com/</code>）都会自动转换成可以点击的链接</p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>使用 <code>~~这个~~</code> 表示删除线，会呈现出 <del>这样</del> 的效果</p><h3 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a>Emoji</h3><p><i class="fa fa-github" aria-hidden="true"></i> GitHub 当然也支持 🐶 Emoji</p><h2 id="一些有用的链接"><a href="#一些有用的链接" class="headerlink" title="一些有用的链接"></a>一些有用的链接</h2><ul><li>Markdown 项目主页：<a href="https://daringfireball.net/projects/markdown/" target="_blank" rel="external">https://daringfireball.net/projects/markdown/</a></li><li><a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="external">Mastering Markdown · GitHub Guides</a></li><li><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown 语法说明(简体中文版)</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML/HTML 文档&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Atom - The hackable text editor</title>
    <link href="http://blog.whatslife.cn/posts/Atom-The-hackable-text-editor/"/>
    <id>http://blog.whatslife.cn/posts/Atom-The-hackable-text-editor/</id>
    <published>2016-07-27T09:11:03.000Z</published>
    <updated>2018-03-17T11:33:30.797Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/atom/atom" target="_blank" rel="external">Atom</a> 起初是一个 GitHub 内部的小项目，后来发展壮大成为一个正式的开源项目。Atom 基于 <a href="https://github.com/electron/electron" target="_blank" rel="external">Electron</a>（Electron 是一个可以让你用 JavaScript, HTML 和 CSS 来写跨平台桌面应用程序的框架），Atom 是用 <a href="http://coffeescript.org" target="_blank" rel="external">CoffeeScript</a> 写的，相当于一个 Web App，也正是因为这样，其可定制程度非常高。</p><p>如果你以前用过 Sublime Text，你会发现 Atom 和 Sublime 非常像，连快捷键都基本一样，但是它们真的没有关系。</p><h2 id="为什么使用-Atom"><a href="#为什么使用-Atom" class="headerlink" title="为什么使用 Atom"></a>为什么使用 Atom</h2><h3 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h3><p>GitHub 开源了 <a href="https://github.com/atom/atom" target="_blank" rel="external">Atom</a> 和构建它的内核 <a href="https://github.com/electron/electron" target="_blank" rel="external">Electron</a>，开源两年以来所取得的成绩非常耀眼：</p><ul><li>110 万月度活跃用户</li><li>1590 万次下载</li><li>300 个新版本发布</li><li>超过 1144 位贡献者</li><li>6.2 万次代码提交</li><li>5897 个 Pull Request</li><li>920 万次的月度访问量</li><li>GitHub 上接近 3 万个 Star</li><li>Atom 社区也快速发展</li></ul><p><img src="http://img.l.jifangcheng.com/atom-2.png" alt="Atom"></p><a id="more"></a><h3 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h3><p>你可以在 macOS，Windows 以及各种 Linux 发行版本上使用 Atom</p><h3 id="apm-Atom-Package-Manager"><a href="#apm-Atom-Package-Manager" class="headerlink" title="apm: Atom Package Manager"></a>apm: Atom Package Manager</h3><p>apm 是 Atom 官方的内建的包管理器，你可以在 <a href="https://atom.io/packages" target="_blank" rel="external">https://atom.io/packages</a> 查看所有的 Atom 扩展（插件，主题）</p><p>你可以在 Atom 的偏好设置里面添加、更新、删除和管理 Atom 的扩展</p><p>apm 还提供了一个命令行工具，你可以使用 <code>apm install xx</code> 来为 Atom 安装扩展，你可以使用 <code>apm --help</code> 来查看 apm 支持的所有命令</p><p>关于 apm 的更多文档你可以去 <a href="https://github.com/atom/apm" target="_blank" rel="external">https://github.com/atom/apm</a> 看看</p><h3 id="漂亮的界面"><a href="#漂亮的界面" class="headerlink" title="漂亮的界面"></a>漂亮的界面</h3><p>你可以使用 Atom 官方提供的主题和社区贡献的主题来美化你的 Atom，如果你还不喜欢，你甚至可以自己来自定义你的 Atom 界面</p><p><img src="http://img.l.jifangcheng.com/atom-5.png" alt=""><br><img src="http://img.l.jifangcheng.com/atom-6.png" alt=""><br><img src="http://img.l.jifangcheng.com/atom-7.png" alt=""><br><img src="http://img.l.jifangcheng.com/atom-8.png" alt=""><br><img src="http://img.l.jifangcheng.com/atom-9.png" alt=""><br><img src="http://img.l.jifangcheng.com/atom-10.png" alt=""><br><img src="http://img.l.jifangcheng.com/atom-11.png" alt=""></p><h3 id="The-hackable-text-editor"><a href="#The-hackable-text-editor" class="headerlink" title="The hackable text editor"></a>The hackable text editor</h3><h4 id="更智能的自动补全"><a href="#更智能的自动补全" class="headerlink" title="更智能的自动补全"></a>更智能的自动补全</h4><p>不仅仅是语言关键字的补全，还可以补全路径，使用过的包名，函数，变量名等等</p><p><img src="http://img.l.jifangcheng.com/atom-3.png" alt=""></p><h4 id="多行编辑"><a href="#多行编辑" class="headerlink" title="多行编辑"></a>多行编辑</h4><p>类似于 Sublime，Atom 也支持多行编辑，它允许你同时编辑多行文本。比如说你需要把一个文档里面的 <code>(&#39;some text&#39;)</code> 替换为 <code>(&quot;some text&quot;)</code>，多行编辑就派上用场了，选中关键词后使用 ctrl/cmd + d 选择下一个这个词，使用 ctrl/cmd + k 可以跳过某个关键词，全部选中关键词后就可以对它们进行编辑了</p><p><img src="http://img.l.jifangcheng.com/atom-4.png" alt=""></p><h4 id="多窗口"><a href="#多窗口" class="headerlink" title="多窗口"></a>多窗口</h4><p>你可以在多窗口中编辑不同的文件</p><p><img src="http://img.l.jifangcheng.com/atom-13.png" alt=""></p><p>也可以在多窗口中编辑相同的文件</p><p><img src="http://img.l.jifangcheng.com/atom-14.png" alt=""></p><h4 id="VIM-模式"><a href="#VIM-模式" class="headerlink" title="VIM 模式"></a>VIM 模式</h4><p>Atom 官方提供了对 VIM 编辑模式的支持</p><p><img src="http://img.l.jifangcheng.com/atom-12.png" alt=""></p><p>你可以在 Atom 中使用 VIM 的基本功能（没有插件的 VIM）</p><h4 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h4><p>你可以在你的用户目录下的 <code>.atom/snippets.cson</code> 中定义代码片段，定义了代码片段之后你就可以使用你定义的快捷单词 + tab 键来插入一段代码</p><figure class="highlight cson"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># .source.python 表明下面的这些代码片段只能在 python 文件中使用</span></div><div class="line"><span class="string">'.source.python'</span>:</div><div class="line">  <span class="string">'Header'</span>:</div><div class="line">    <span class="string">'prefix'</span>: <span class="string">'head'</span></div><div class="line">    <span class="string">'body'</span>: <span class="string">'''</span></div><div class="line">      #!/usr/bin/env python</div><div class="line">      # coding=utf-8</div><div class="line">    '''</div><div class="line"></div><div class="line">  <span class="string">'ipdb'</span>:</div><div class="line">    <span class="string">'prefix'</span>: <span class="string">'ipdb'</span></div><div class="line">    <span class="string">'body'</span>: <span class="string">"__import__('ipdb').set_trace()"</span></div></pre></td></tr></table></figure><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><ul><li>ctrl/cmd + p 快速切换文件</li><li>ctrl/cmd + shift + p 打开功能面板</li><li>ctrl + g 快速跳转到文件的某一行</li><li>ctrl/cmd + x 删除一整行</li><li>ctrl/cmd + r 在文件内的函数定义间跳转</li></ul><h3 id="Sublime-VS-Atom"><a href="#Sublime-VS-Atom" class="headerlink" title="Sublime VS Atom"></a>Sublime VS Atom</h3><p>我以前也是 Sublime 的用户，后来转到了 Atom，我对这两个编辑器都还算是了解，所以来说一下各自相比于对方的优缺点。</p><p>Sublime 的优点</p><ul><li>启动速度快，更稳定</li></ul><p>Atom 的优点</p><ul><li>活跃的开源社区</li><li>强大的官方的包管理器</li><li>高度可定制</li><li>更好的 VIM 模式（Sublime 3 的 VIM 模式居然还有 BUG）</li></ul><h2 id="一些不足"><a href="#一些不足" class="headerlink" title="一些不足"></a>一些不足</h2><ul><li>启动速度慢</li><li>编辑大型文件显得有些吃力</li></ul><h2 id="一些好用的-Atom-插件"><a href="#一些好用的-Atom-插件" class="headerlink" title="一些好用的 Atom 插件"></a>一些好用的 Atom 插件</h2><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><ul><li><a href="https://atom.io/packages/trailing-spaces" target="_blank" rel="external">trailing-spaces</a> - 高亮多余的空格</li><li><a href="https://atom.io/packages/vim-mode" target="_blank" rel="external">vim-mode</a> - vim 模式</li><li><a href="https://atom.io/packages/ex-mode" target="_blank" rel="external">ex-mode</a> - vim 模式的拓展</li><li><a href="https://atom.io/packages/minimap" target="_blank" rel="external">minimap</a> - 右侧小地图</li><li><a href="https://atom.io/packages/autocomplete-paths" target="_blank" rel="external">autocomplete-paths</a> - 对路径选择进行增强</li><li><a href="https://atom.io/packages/atom-beautify" target="_blank" rel="external">atom-beautify</a> - 自动美化代码格式</li></ul><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul><li><a href="http://nuclide.io" target="_blank" rel="external">Nuclide</a> - 用于编写 React Native</li><li><a href="https://atom.io/packages/emmet" target="_blank" rel="external">Emmet</a> - 快速编写 HTML</li><li><a href="https://atom.io/packages/tag" target="_blank" rel="external">tag</a> - Sublime 风格的 HTML 标签自动闭合</li><li><a href="https://atom.io/packages/color-picker" target="_blank" rel="external">color-picker</a> - CSS 颜色取色器</li><li><a href="https://atom.io/packages/autoprefixer" target="_blank" rel="external">autoprefixer</a> - 自动补全 CSS 前缀</li><li><a href="https://atom.io/packages/linter-jshint" target="_blank" rel="external">linter-jshint</a> - JavaScript 语法检查</li></ul><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><ul><li><a href="https://atom.io/packages/autocomplete-python" target="_blank" rel="external">autocomplete-python</a> - 对Python提示进行增强</li><li><a href="https://atom.io/packages/linter-flake8" target="_blank" rel="external">linter-flake8</a> - Python 语法检查</li><li><a href="https://atom.io/packages/python-tools" target="_blank" rel="external">python-tools</a> - 一些有用的 Python 开发工具集</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/atom/atom&quot;&gt;Atom&lt;/a&gt; 起初是一个 GitHub 内部的小项目，后来发展壮大成为一个正式的开源项目。Atom 基于 &lt;a href=&quot;https://github.com/electron/electron&quot;&gt;Electron&lt;/a&gt;（Electron 是一个可以让你用 JavaScript, HTML 和 CSS 来写跨平台桌面应用程序的框架），Atom 是用 &lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt; 写的，相当于一个 Web App，也正是因为这样，其可定制程度非常高。&lt;/p&gt;
&lt;p&gt;如果你以前用过 Sublime Text，你会发现 Atom 和 Sublime 非常像，连快捷键都基本一样，但是它们真的没有关系。&lt;/p&gt;
&lt;h2 id=&quot;为什么使用-Atom&quot;&gt;&lt;a href=&quot;#为什么使用-Atom&quot; class=&quot;headerlink&quot; title=&quot;为什么使用 Atom&quot;&gt;&lt;/a&gt;为什么使用 Atom&lt;/h2&gt;&lt;h3 id=&quot;开源&quot;&gt;&lt;a href=&quot;#开源&quot; class=&quot;headerlink&quot; title=&quot;开源&quot;&gt;&lt;/a&gt;开源&lt;/h3&gt;&lt;p&gt;GitHub 开源了 &lt;a href=&quot;https://github.com/atom/atom&quot;&gt;Atom&lt;/a&gt; 和构建它的内核 &lt;a href=&quot;https://github.com/electron/electron&quot;&gt;Electron&lt;/a&gt;，开源两年以来所取得的成绩非常耀眼：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;110 万月度活跃用户&lt;/li&gt;
&lt;li&gt;1590 万次下载&lt;/li&gt;
&lt;li&gt;300 个新版本发布&lt;/li&gt;
&lt;li&gt;超过 1144 位贡献者&lt;/li&gt;
&lt;li&gt;6.2 万次代码提交&lt;/li&gt;
&lt;li&gt;5897 个 Pull Request&lt;/li&gt;
&lt;li&gt;920 万次的月度访问量&lt;/li&gt;
&lt;li&gt;GitHub 上接近 3 万个 Star&lt;/li&gt;
&lt;li&gt;Atom 社区也快速发展&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://img.l.jifangcheng.com/atom-2.png&quot; alt=&quot;Atom&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.whatslife.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="编辑器 js" scheme="http://blog.whatslife.cn/tags/%E7%BC%96%E8%BE%91%E5%99%A8-js/"/>
    
  </entry>
  
  <entry>
    <title>npm 私有仓库搭建</title>
    <link href="http://blog.whatslife.cn/posts/build-private-npm-repository-server/"/>
    <id>http://blog.whatslife.cn/posts/build-private-npm-repository-server/</id>
    <published>2016-07-26T05:38:31.000Z</published>
    <updated>2017-06-13T03:37:25.000Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="为什么搭建私有的-npm-仓库"><a href="#为什么搭建私有的-npm-仓库" class="headerlink" title="为什么搭建私有的 npm 仓库"></a>为什么搭建私有的 npm 仓库</h2><ul><li>发布和管理公司内部的私有的、暂不公开的 npm 包</li><li>加速 npm 包的下载，npm 官方仓库在国内太慢了</li></ul><h2 id="了解-sinopia"><a href="#了解-sinopia" class="headerlink" title="了解 sinopia"></a>了解 sinopia</h2><p><a href="https://github.com/rlidwka/sinopia" target="_blank" rel="external">https://github.com/rlidwka/sinopia</a><br>sinopia 是一个用于搭建私有的 npm 仓库的软件，我们将借助它来搭建 npm 私有仓库。</p><p>sinopia 安装和使用都极其简单，它还有以下的特性：</p><ul><li>支持安装 npm 包（npm install, npm upgrade, etc.）</li><li>支持发布 npm 包（npm publish）</li><li>支持 npm unpublish</li><li>即将支持 npm tag</li><li>不支持 npm deprecate</li><li>支持 npm adduser</li><li>支持在浏览器端搜索，不支持命令行搜索</li><li>不支持 npm star, npm unstar，因为这对私有 npm 包没有意义</li><li>sinopia 没有使用数据库来存储，它使用本地的文件系统来存储</li></ul><h2 id="使用-sinopia"><a href="#使用-sinopia" class="headerlink" title="使用 sinopia"></a>使用 sinopia</h2><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 安装和使用</div><div class="line">$ npm install -g sinopia</div><div class="line">$ sinopia</div><div class="line"></div><div class="line"># npm 配置，使用 sinopia 搭建的 npm 仓库来下载 npm 包</div><div class="line">$ npm set registry http://localhost:4873/</div></pre></td></tr></table></figure><p>sinopia 界面<br><img src="http://img.l.jifangcheng.com/sinopia-1.png" alt="sinopia"></p><p>服务器搭建完成之后，就可以使用 <code>http://localhost:4873/</code> 作为仓库地址来下载和发布 npm 包了。</p><p>当你使用 <code>npm install xx</code> 后，sinopia 会检查本地有没有 xx 这个包，如果有，直接使用本地的缓存；如果没有，它会从 npm 官方仓库下载这个包，并将这个包缓存在本地以便二次下载。sinopia 并不会同步 npm 官方仓库的所有内容，它只会缓存你使用 <code>npm install</code> 下载过的内容。</p><p>如果要发布私有包，使用 <code>npm publish --registry=http://localhost:4873/</code> 就可以了，发布好了你就可以在 web 端界面上看到它了。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>添加一个新用户：<code>npm adduser --registry http://localhost:4873/</code>，接下来输入用户名和密码就可以了，用户可以用来做权限管理</p><p>配置文件详解</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># 你可以在这里找到更多配置示例：</span></div><div class="line"><span class="comment"># https://github.com/rlidwka/sinopia/tree/master/conf</span></div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment"># 存储 npm 包的位置</span></div><div class="line"><span class="attr">storage:</span> ./storage</div><div class="line"></div><div class="line"><span class="comment"># 认证</span></div><div class="line"><span class="comment"># max_users 设置成 -1 拒绝使用 npm adduser 添加用户，不过在公司内部我们可以使用 htpasswd 这个文件来初始化用户</span></div><div class="line"><span class="comment"># 具体的会在下面说到</span></div><div class="line"><span class="attr">auth:</span></div><div class="line"><span class="attr">  htpasswd:</span></div><div class="line"><span class="attr">    file:</span> ./htpasswd</div><div class="line"><span class="attr">    max_users:</span> <span class="bullet">-1</span></div><div class="line"></div><div class="line"><span class="comment"># 配置上游的 npm 服务器，主要是用于当仓库中不存在请求的那个包时去上游服务器拉取</span></div><div class="line"><span class="attr">uplinks:</span></div><div class="line"><span class="attr">  npmjs:</span></div><div class="line"><span class="attr">    url:</span> https://registry.npmjs.org/</div><div class="line"></div><div class="line"><span class="attr">packages:</span></div><div class="line">  <span class="comment"># 正则表达式匹配包来控制相应的权限</span></div><div class="line">  <span class="comment"># access 表示哪一类用户可以对匹配的项目进行安装(install)</span></div><div class="line">  <span class="comment"># publish 表示哪一类用户可以对匹配的项目进行发布(publish)</span></div><div class="line">  <span class="comment"># proxy 当本地没有包的时候使用的代理，对应上面的 uplinks</span></div><div class="line">  <span class="comment"># 一共有以下几种权限：</span></div><div class="line">  <span class="comment"># $all 所有人都可以</span></div><div class="line">  <span class="comment"># $anonymous 只有匿名者可以进行对应操作（通常无用）</span></div><div class="line">  <span class="comment"># $authenticated 只有经过认证的可以进行操作（私有的一定要用这个）</span></div><div class="line"></div><div class="line">  <span class="string">'@*/*'</span>:</div><div class="line"><span class="attr">    access:</span> $all</div><div class="line"><span class="attr">    publish:</span> $authenticated</div><div class="line"></div><div class="line">  <span class="string">'*'</span>:</div><div class="line"><span class="attr">    access:</span> $all</div><div class="line"><span class="attr">    publish:</span> $authenticated</div><div class="line"><span class="attr">    proxy:</span> npmjs</div><div class="line"></div><div class="line"><span class="comment"># 日志的配置</span></div><div class="line"><span class="attr">logs:</span></div><div class="line"><span class="bullet">  -</span> &#123;type: stdout, format: pretty, level: http&#125;</div><div class="line">  <span class="comment">#- &#123;type: file, path: sinopia.log, level: info&#125;</span></div></pre></td></tr></table></figure><p>关于 auth 的配置，为了达到私有的目的，我们把 max_users 设置成 -1 来拒绝添加用户，不过在公司内部我们依然可以使用 htpasswd 这个文件来初始化用户，其格式如下，每一行一个用户：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username:&#123;SHA&#125;经过加密的后密码值:autocreated 2016-07-25T08:55:48.859Z（创建时间）</div></pre></td></tr></table></figure><p>加密算法：将密码使用 SHA1 算法哈希之后再使用 base64 转换再输出就可以了。<br>使用 python 实现的密码加密示例，下面是密码 <code>admin</code> 加密后的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>base64.b64encode(hashlib.sha1(<span class="string">'admin'</span>).digest())</div><div class="line"><span class="string">'0DPiKuNIrrVmD8IUCuw1hQxNqZc='</span></div></pre></td></tr></table></figure><p>配置完成后重启一下 sinopia 服务器就可以了。</p><p>更多配置可以去 <a href="https://github.com/rlidwka/sinopia/blob/master/conf/full.yaml" target="_blank" rel="external">https://github.com/rlidwka/sinopia/blob/master/conf/full.yaml</a> 看看。</p><h3 id="使用-Docker-来搭建-sinopia"><a href="#使用-Docker-来搭建-sinopia" class="headerlink" title="使用 Docker 来搭建 sinopia"></a>使用 Docker 来搭建 sinopia</h3><p>sinopia 提供了一个 Docker 的镜像 <a href="https://registry.hub.docker.com/u/keyvanfatehi/sinopia/" target="_blank" rel="external">https://registry.hub.docker.com/u/keyvanfatehi/sinopia/</a></p><p>我们可以使用这个镜像来快速搭建一个 sinopia</p><h4 id="快速开始-1"><a href="#快速开始-1" class="headerlink" title="快速开始"></a>快速开始</h4><ul><li>安装镜像 <code>docker pull keyvanfatehi/sinopia:latest</code></li><li>创建容器 <code>docker run --name sinopia -d -p 4873:4873 keyvanfatehi/sinopia:latest</code></li><li>现在就算搭建完成了，你可以访问 <code>http://&lt;docker_host&gt;:4873/</code> 来查看效果了</li></ul><p>更详细的文档可以去 <a href="https://github.com/kfatehi/docker-sinopia" target="_blank" rel="external">https://github.com/kfatehi/docker-sinopia</a> 看看</p><h4 id="使用-docker-compose"><a href="#使用-docker-compose" class="headerlink" title="使用 docker-compose"></a>使用 docker-compose</h4><p>通过配置 docker-compose 我们可以更优雅地搭建 sinopia，下面是一个示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="attr">version:</span> <span class="string">'2'</span></div><div class="line"><span class="attr">services:</span></div><div class="line"><span class="attr">  sinopia:</span></div><div class="line"><span class="attr">    image:</span> keyvanfatehi/sinopia</div><div class="line"><span class="attr">    ports:</span></div><div class="line"><span class="bullet">      -</span> <span class="string">"4873:4873"</span></div><div class="line">    <span class="comment"># 启动的时候执行的命令（启动 sinopia）</span></div><div class="line"><span class="attr">    command:</span> /opt/sinopia/start.sh</div><div class="line"></div><div class="line">    <span class="comment"># 我们在宿主机和 docker 里面同步了 config.yaml 和 htpasswd 这两个文件</span></div><div class="line">    <span class="comment"># 并且把 docker 里面存储的 npm 包也同步到宿主机上面</span></div><div class="line"><span class="attr">    volumes:</span></div><div class="line"><span class="bullet">      -</span> ./config.yaml:/opt/sinopia/config.yaml</div><div class="line"><span class="bullet">      -</span> ./htpasswd:/opt/sinopia/htpasswd</div><div class="line"><span class="bullet">      -</span> /data/storage/:/opt/sinopia/storage/</div></pre></td></tr></table></figure><p>写好了 docker-compose.yml 后就可以通过 <code>docker-compose up</code> 来启动 sinopia 服务。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;为什么搭建私有的-npm-仓库&quot;&gt;&lt;a href=&quot;#为什么搭建私有的-npm-仓库&quot; class=&quot;headerlink&quot; title=&quot;为什么搭建私有的 npm 仓库&quot;&gt;&lt;/a&gt;为什么搭建私有的 npm 仓库&lt;/h2&gt;&lt;ul
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用 Hexo 写博客</title>
    <link href="http://blog.whatslife.cn/posts/use-Hexo/"/>
    <id>http://blog.whatslife.cn/posts/use-Hexo/</id>
    <published>2016-07-04T06:05:08.000Z</published>
    <updated>2018-03-17T11:20:24.337Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么用Hexo"><a href="#为什么用Hexo" class="headerlink" title="为什么用Hexo"></a>为什么用Hexo</h2><ol><li>静态博客，部署在 github 上，不需要数据库，部署和迁移方便</li><li>使用 github 管理代码，我们都用 github，协作方便</li><li>博客使用 markdown 格式存储，方便编辑</li><li>有许许多多的插件，扩展方便</li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>安装 node 和 Hexo</li><li>安装 Burnish 博客</li><li>写博客</li><li>发布</li><li>保存源码</li></ol><a id="more"></a><h3 id="安装-node-和-Hexo"><a href="#安装-node-和-Hexo" class="headerlink" title="安装 node 和 Hexo"></a>安装 node 和 Hexo</h3><p><a href="https://hexo.io/docs/" target="_blank" rel="external">Hexo 安装教程</a><br>推荐使用 nvm 来安装 <a href="https://github.com/creationix/nvm" target="_blank" rel="external">https://github.com/creationix/nvm</a></p><h3 id="安装博客"><a href="#安装博客" class="headerlink" title="安装博客"></a>安装博客</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># clone 代码</span></div><div class="line">git clone https:<span class="comment">//github.com/TechForever/TechForever.github.io.git blog</span></div><div class="line"></div><div class="line"><span class="meta"># 更新 git submodule 管理的主题</span></div><div class="line">git submodule update --init --recursive</div><div class="line"></div><div class="line"><span class="meta"># 在全局安装hexo命令行工具</span></div><div class="line">npm install hexo -g</div><div class="line"></div><div class="line"><span class="meta"># 安装依赖</span></div><div class="line">cd blog &amp;&amp; git checkout source &amp;&amp; npm install</div><div class="line"></div><div class="line"><span class="meta"># 生成博客</span></div><div class="line">hexo generate --watch</div><div class="line"></div><div class="line"><span class="meta"># 预览</span></div><div class="line">hexo server</div></pre></td></tr></table></figure><h3 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># 生成新的 markdown 文件，在 source/_post/ 文件夹下</span></div><div class="line">hexo <span class="keyword">new</span> <span class="string">"your title"</span></div><div class="line"></div><div class="line"><span class="meta"># 写博客，markdown 语法</span></div><div class="line">vim source/_post/your title.md</div><div class="line"></div><div class="line"><span class="meta"># 生成博客</span></div><div class="line">hexo generate --watch</div><div class="line"></div><div class="line"><span class="meta"># 预览</span></div><div class="line">hexo server</div><div class="line"></div><div class="line"><span class="meta"># 发布</span></div><div class="line">hexo deploy</div><div class="line"></div><div class="line"><span class="meta"># 将代码 push 到 source 分支</span></div><div class="line">git push origin source:source</div></pre></td></tr></table></figure><h3 id="master-和-source-分支的区别"><a href="#master-和-source-分支的区别" class="headerlink" title="master 和 source 分支的区别"></a>master 和 source 分支的区别</h3><p>master 分支是 github pages 展示的静态资源文件，这些文件是由 source 分支的源代码生成的<br>有更新需要随时 push 到 github 的 source 分支</p><h3 id="使用-git-submodule-来管理主题"><a href="#使用-git-submodule-来管理主题" class="headerlink" title="使用 git submodule 来管理主题"></a>使用 git submodule 来管理主题</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 添加 submodule，submodule 已经 fork 到了 Tech Forever 团队</div><div class="line">git submodule <span class="built_in">add</span> http<span class="variable">s:</span>//github.<span class="keyword">com</span>/TechForever/hexo-theme-<span class="keyword">next</span>.git</div><div class="line"></div><div class="line"># 更新主题配置</div><div class="line"><span class="keyword">cd</span> themes/<span class="keyword">next</span></div><div class="line"><span class="keyword">vim</span> _config.yml</div><div class="line">git commit -<span class="keyword">a</span></div><div class="line">git push</div><div class="line"></div><div class="line"># 其他命令参考 http<span class="variable">s:</span>//git-scm.<span class="keyword">com</span>/book/zh/v2/Git-工具-子模块</div></pre></td></tr></table></figure><h2 id="Trouble-Shotting"><a href="#Trouble-Shotting" class="headerlink" title="Trouble Shotting"></a>Trouble Shotting</h2><ul><li><code>hexo generate</code> 时报 <code>hightlight.js</code> 异常<ul><li>将 <code>_config.yml</code> 中的 auto_detect 置为 <code>false</code> 再执行 <code>hexo generate</code>。 成功后再将其置回 <code>true</code>（开启代码高亮功能）。</li></ul></li></ul><ul><li><p>每次更新 source 时务必将 submodule 也同时更新, 否则有可能导致 submodule 的版本被覆盖</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">git checkout source</div><div class="line">git pull <span class="comment">--rebase origin source</span></div><div class="line">git submodule <span class="keyword">update</span> <span class="comment">--recursive</span></div></pre></td></tr></table></figure></li><li><p>如何同时 push submodule</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">git</span> push --recurse-submodules=<span class="literal">on</span>-demand</div></pre></td></tr></table></figure></li></ul><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p><a href="https://hexo.io" target="_blank" rel="external">hexo</a><br><a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="external">主题 maupassant</a><br><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">主题 Next</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>文章排版参照 <a href="https://github.com/sparanoid/chinese-copywriting-guidelines" target="_blank" rel="external">中文文案排版指北</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么用Hexo&quot;&gt;&lt;a href=&quot;#为什么用Hexo&quot; class=&quot;headerlink&quot; title=&quot;为什么用Hexo&quot;&gt;&lt;/a&gt;为什么用Hexo&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;静态博客，部署在 github 上，不需要数据库，部署和迁移方便&lt;/li&gt;
&lt;li&gt;使用 github 管理代码，我们都用 github，协作方便&lt;/li&gt;
&lt;li&gt;博客使用 markdown 格式存储，方便编辑&lt;/li&gt;
&lt;li&gt;有许许多多的插件，扩展方便&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装 node 和 Hexo&lt;/li&gt;
&lt;li&gt;安装 Burnish 博客&lt;/li&gt;
&lt;li&gt;写博客&lt;/li&gt;
&lt;li&gt;发布&lt;/li&gt;
&lt;li&gt;保存源码&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="other" scheme="http://blog.whatslife.cn/categories/other/"/>
    
    
      <category term="other" scheme="http://blog.whatslife.cn/tags/other/"/>
    
  </entry>
  
</feed>
